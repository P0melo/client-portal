//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAMPortal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class officecadetprogramEntities : DbContext
    {
        public officecadetprogramEntities()
            : base("name=officecadetprogramEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblbatch> tblbatches { get; set; }
        public virtual DbSet<tblbatch_enrolled> tblbatch_enrolled { get; set; }
        public virtual DbSet<tblbatch_general_remarks> tblbatch_general_remarks { get; set; }
        public virtual DbSet<tblbatch_individual_merit_points> tblbatch_individual_merit_points { get; set; }
        public virtual DbSet<tblbatch_individual_remarks> tblbatch_individual_remarks { get; set; }
        public virtual DbSet<tblbatch_merits_category> tblbatch_merits_category { get; set; }
        public virtual DbSet<tblbatch_merits_demerits> tblbatch_merits_demerits { get; set; }
        public virtual DbSet<tblbatch_merits_list> tblbatch_merits_list { get; set; }
        public virtual DbSet<tblbatch_offense_category> tblbatch_offense_category { get; set; }
        public virtual DbSet<tblbatch_offense_list> tblbatch_offense_list { get; set; }
        public virtual DbSet<tblbatch_offense_records> tblbatch_offense_records { get; set; }
        public virtual DbSet<tblbatchassignment> tblbatchassignments { get; set; }
        public virtual DbSet<tblbehavioral_asessment_gen_remark> tblbehavioral_asessment_gen_remark { get; set; }
        public virtual DbSet<tblbehavioral_assessment> tblbehavioral_assessment { get; set; }
        public virtual DbSet<tblcourse_curriculum> tblcourse_curriculum { get; set; }
        public virtual DbSet<tblcrew> tblcrews { get; set; }
        public virtual DbSet<tblrank> tblranks { get; set; }
        public virtual DbSet<tblschedule> tblschedules { get; set; }
        public virtual DbSet<tbltpcompany> tbltpcompanies { get; set; }
        public virtual DbSet<tbltraining_attendees> tbltraining_attendees { get; set; }
        public virtual DbSet<tbltraining> tbltrainings { get; set; }
        public virtual DbSet<tbluser> tblusers { get; set; }
        public virtual DbSet<tblcontinent> tblcontinents { get; set; }
        public virtual DbSet<tblcountry> tblcountries { get; set; }
        public virtual DbSet<tblnewcrewrequest> tblnewcrewrequests { get; set; }
        public virtual DbSet<tblmeal_fees> tblmeal_fees { get; set; }
        public virtual DbSet<tblmeal_log> tblmeal_log { get; set; }
        public virtual DbSet<tblmeal_provision> tblmeal_provision { get; set; }
        public virtual DbSet<tblmeal_provision_history> tblmeal_provision_history { get; set; }
        public virtual DbSet<tblmealemployee> tblmealemployees { get; set; }
        public virtual DbSet<tblmeal> tblmeals { get; set; }
        public virtual DbSet<keygennoyear> keygennoyears { get; set; }
        public virtual DbSet<tbldorm_reservation_bank> tbldorm_reservation_bank { get; set; }
        public virtual DbSet<tblhotel_guest_remark_type> tblhotel_guest_remark_type { get; set; }
        public virtual DbSet<tbloff_site_status> tbloff_site_status { get; set; }
        public virtual DbSet<tbltrainingclassification> tbltrainingclassifications { get; set; }
        public virtual DbSet<tbloff_site_reservation> tbloff_site_reservation { get; set; }
        public virtual DbSet<tblbookergroup> tblbookergroups { get; set; }
        public virtual DbSet<tblcbtsched> tblcbtscheds { get; set; }
        public virtual DbSet<tblcbtscheddetail> tblcbtscheddetails { get; set; }
        public virtual DbSet<tblcbttraining> tblcbttrainings { get; set; }
        public virtual DbSet<tblcrew_trainingbooking_reason> tblcrew_trainingbooking_reason { get; set; }
        public virtual DbSet<tblsamportallog> tblsamportallogs { get; set; }
        public virtual DbSet<tblscheddata> tblscheddatas { get; set; }
        public virtual DbSet<tblloghistory> tblloghistories { get; set; }
        public virtual DbSet<tblschedule_registration_ofcrew> tblschedule_registration_ofcrew { get; set; }
        public virtual DbSet<tblspecialcourserequest> tblspecialcourserequests { get; set; }
        public virtual DbSet<tbltransportation> tbltransportations { get; set; }
        public virtual DbSet<tbldorm_fees> tbldorm_fees { get; set; }
    
        public virtual ObjectResult<CheckDuplicateAccommodationBooking_Result> CheckDuplicateAccommodationBooking(string pMNNO, string pRank, string pLastName, string pFirstName, Nullable<System.DateTime> pCheckInDate, Nullable<System.DateTime> pCheckOutDate, Nullable<int> pCompanyId)
        {
            var pMNNOParameter = pMNNO != null ?
                new ObjectParameter("pMNNO", pMNNO) :
                new ObjectParameter("pMNNO", typeof(string));
    
            var pRankParameter = pRank != null ?
                new ObjectParameter("pRank", pRank) :
                new ObjectParameter("pRank", typeof(string));
    
            var pLastNameParameter = pLastName != null ?
                new ObjectParameter("pLastName", pLastName) :
                new ObjectParameter("pLastName", typeof(string));
    
            var pFirstNameParameter = pFirstName != null ?
                new ObjectParameter("pFirstName", pFirstName) :
                new ObjectParameter("pFirstName", typeof(string));
    
            var pCheckInDateParameter = pCheckInDate.HasValue ?
                new ObjectParameter("pCheckInDate", pCheckInDate) :
                new ObjectParameter("pCheckInDate", typeof(System.DateTime));
    
            var pCheckOutDateParameter = pCheckOutDate.HasValue ?
                new ObjectParameter("pCheckOutDate", pCheckOutDate) :
                new ObjectParameter("pCheckOutDate", typeof(System.DateTime));
    
            var pCompanyIdParameter = pCompanyId.HasValue ?
                new ObjectParameter("pCompanyId", pCompanyId) :
                new ObjectParameter("pCompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDuplicateAccommodationBooking_Result>("CheckDuplicateAccommodationBooking", pMNNOParameter, pRankParameter, pLastNameParameter, pFirstNameParameter, pCheckInDateParameter, pCheckOutDateParameter, pCompanyIdParameter);
        }
    
        public virtual int AccommodationReservationCheck(Nullable<int> roomType, Nullable<System.DateTime> cid, Nullable<System.DateTime> cod)
        {
            var roomTypeParameter = roomType.HasValue ?
                new ObjectParameter("roomType", roomType) :
                new ObjectParameter("roomType", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(System.DateTime));
    
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccommodationReservationCheck", roomTypeParameter, cidParameter, codParameter);
        }
    
        public virtual int UpdateAccommodationReservationCheck(Nullable<int> reservationId, Nullable<int> roomType, Nullable<System.DateTime> cid, Nullable<System.DateTime> cod)
        {
            var reservationIdParameter = reservationId.HasValue ?
                new ObjectParameter("reservationId", reservationId) :
                new ObjectParameter("reservationId", typeof(int));
    
            var roomTypeParameter = roomType.HasValue ?
                new ObjectParameter("roomType", roomType) :
                new ObjectParameter("roomType", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(System.DateTime));
    
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAccommodationReservationCheck", reservationIdParameter, roomTypeParameter, cidParameter, codParameter);
        }
    }
}
